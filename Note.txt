13. Express Server & Initial Product Routes
- npm init (create package.json)
- package.json-> "type": "module" (nodejs commonjs module by default, instead use es module)
- package.json->"scripts": { "start": "node backend/server.js"}
- npm install express
- json formatter(useful chrome extension)


14. Nodemon & Concurrently
- npm install -D nodemon concurrently (root folder)
- add scripts ("server": "nodemon backend/server.js")
                "client": "npm start -prefix frontend"
                "dev": "concurrently \"npm run server\" \"npm run client\"" 


15. Envirnoment Variables
- npm i -D dotenv (root)
- create .env file (root)

16. Fetch Products
- npm i axios (frontend)
- add the proxy (package.json-> "proxy": "http://localhost:5000")
- use useEffect hooks to fetch data

Section 4: Starting MongoDB & Mongoose
17. MongoDB Atlas Setup
- Signup MongoDB
- Create Organization-> Create Project-> 
  Create a Database (Username & Password, Add My IP Address)-> 
  Connect to Cluster0(Copy Connect to application) and put that into .env as MONGO_URI->
  Browse collection-> Add My Own data-> Create Database(proshop & products)
- create example.env and put actual variable without value and push to repo

18. MongoDB Compass Setup
- Desktop application

19. Connect with Mongoose
-  npm i mongoose (root)
- create folder config-> db.js


20. Modeling Our Data
- Create folder models-> productModel.js
                      -> userModel.js   
                      -> orderModel.js